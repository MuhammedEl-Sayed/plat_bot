
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import *
from ctypes import windll
from PIL import ImageTk, Image
import requests as rq

GWL_EXSTYLE = -20
WS_EX_APPWINDOW = 0x00040000
WS_EX_TOOLWINDOW = 0x00000080

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
def round_rectangle(x1, y1, x2, y2, radius=25, **kwargs):
        
    points = [x1+radius, y1,
              x1+radius, y1,
              x2-radius, y1,
              x2-radius, y1,
              x2, y1,
              x2, y1+radius,
              x2, y1+radius,
              x2, y2-radius,
              x2, y2-radius,
              x2, y2,
              x2-radius, y2,
              x2-radius, y2,
              x1+radius, y2,
              x1+radius, y2,
              x1, y2,
              x1, y2-radius,
              x1, y2-radius,
              x1, y1+radius,
              x1, y1+radius,
              x1, y1]

    return canvas.create_polygon(points, **kwargs, smooth=True)


root = Tk()
window = Toplevel(root)
root.attributes("-alpha", 0.0)
window.geometry("600x800")
window.configure(bg = "#FFFFFF")
window.update_idletasks()
#window.overrideredirect(1)
window.configure(borderwidth=0)
window.attributes('-transparentcolor', 'grey15')

window.attributes('-transparentcolor', 'grey15')
# remove window from window manager
hwnd = windll.user32.GetParent(window.winfo_id())
stylew = windll.user32.GetWindowLongW(hwnd, GWL_EXSTYLE)
stylew = stylew & ~WS_EX_TOOLWINDOW
stylew = stylew | WS_EX_APPWINDOW
res = windll.user32.SetWindowLongW(hwnd, GWL_EXSTYLE, stylew)
# re-assert the new window style
window.wm_withdraw()
window.after(10, lambda: window.wm_deiconify())
window.bind('<Escape>', lambda e: window.destroy())
window.bind('<Button-1>', lambda e: clickwindow(e))
window.bind('<B1-Motion>', lambda e: dragwindow(e))
def onRootIconify(event): window.withdraw()
root.bind("<Unmap>", onRootIconify)
def onRootDeiconify(event): window.deiconify()
root.bind("<Map>", onRootDeiconify)



def clickwindow(event):
    global offsetx, offsety
    offsetx = event.x
    offsety = event.y
    return offsetx, offsety

def dragwindow(event):
    window.geometry("+{0}+{1}".format(event.x_root - offsetx, event.y_root - offsety))

canvas = Canvas(
    window,
    bg = "#000015",
    height = 800,
    width = 600,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=262.0,
    y=681.0,
    width=85.0,
    height=56.0
)
#DropDOWN
canvas.create_rectangle(
    221.0,
    117.0,
    376.0,
    351.0,
    fill="#111111",
    outline="")
# Minimize 

def on_enter_exit(event):
    exit_button['background'] = '#E75757'
def on_exit_exit(event):
    exit_button['background'] = '#000015'
def on_enter_mini(event):
    minimize_button['background'] = '#8E8E8E'
def on_exit_mini(event):
    minimize_button['background'] = '#000015'
exit_button = Button(
    window,
    text="X",
    bg="#000015",
    fg="#ffffff",
    font="-family {Segoe UI} -size 12 -weight bold ",
    highlightthickness=0,
    relief="flat",
    command=lambda: exit(),
)
exit_button.bind("<Enter>", on_enter_exit)
exit_button.bind("<Leave>", on_exit_exit)
exit_button.place(relx=0.9, y=0.08, width=60.0, height=60.0, anchor='nw')

minimize_button = Button(
    window,
    text="-",
    bg="#000015",
    fg="#ffffff",
    font="-family {Segoe UI} -size 20 -weight bold ",
    highlightthickness=0,
    relief="flat",
    anchor='center',
    command=lambda: root.iconify(),
)
minimize_button.bind("<Enter>", on_enter_mini)
minimize_button.bind("<Leave>", on_exit_mini)
minimize_button.place(relx=0.8, y=0.08, width=60.0, height=60.0, anchor='nw')
icon = Image.open(relative_to_assets("icon.png"))
icon = icon.resize((30, 30), Image.ANTIALIAS)
icon = ImageTk.PhotoImage(icon)
icon_label = Label(
    window,
    image=icon,
    bg="#000015",
    fg="#ffffff",
    highlightthickness=0,
    relief="flat",
    borderwidth=0,
)   
icon_label.place(relx=0.02, rely=0.02, width=30, height=30)

canvas.create_text(
    55.0,
    22.0,
    anchor="nw",
    text="Platinum Bot",
    fill="#FFFFFF",
    font=("Roboto Medium", 16 * -1)
)
window.resizable(False, False)
window.mainloop()
